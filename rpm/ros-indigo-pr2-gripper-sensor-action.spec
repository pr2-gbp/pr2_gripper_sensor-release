Name:           ros-indigo-pr2-gripper-sensor-action
Version:        1.0.5
Release:        0%{?dist}
Summary:        ROS pr2_gripper_sensor_action package

Group:          Development/Libraries
License:        BSD
URL:            None
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-indigo-actionlib
Requires:       ros-indigo-actionlib-msgs
Requires:       ros-indigo-message-runtime
Requires:       ros-indigo-pr2-controllers-msgs
Requires:       ros-indigo-pr2-gripper-sensor-controller
Requires:       ros-indigo-pr2-gripper-sensor-msgs
Requires:       ros-indigo-pr2-machine
Requires:       ros-indigo-pr2-mechanism-controllers
Requires:       ros-indigo-pr2-mechanism-model
Requires:       ros-indigo-robot-mechanism-controllers
Requires:       ros-indigo-roscpp
BuildRequires:  ros-indigo-actionlib
BuildRequires:  ros-indigo-actionlib-msgs
BuildRequires:  ros-indigo-catkin
BuildRequires:  ros-indigo-message-generation
BuildRequires:  ros-indigo-pr2-controllers-msgs
BuildRequires:  ros-indigo-pr2-gripper-sensor-controller
BuildRequires:  ros-indigo-pr2-gripper-sensor-msgs
BuildRequires:  ros-indigo-pr2-machine
BuildRequires:  ros-indigo-pr2-mechanism-controllers
BuildRequires:  ros-indigo-pr2-mechanism-model
BuildRequires:  ros-indigo-robot-mechanism-controllers
BuildRequires:  ros-indigo-roscpp

%description
The pr2_gripper_sensor_action package provides an action interface for talking
to the pr2_gripper_sensor_controller real-time controller. It provides several
different actions for getting high-level sensor information from the PR2 palm-
mounted accelerometers, fingertip pressure arrays, and gripper motor/encoder, as
well as several sensor-based gripper control actions that respond with low-
latency in real-time.

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/indigo/setup.sh" ]; then . "/opt/ros/indigo/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/indigo" \
        -DCMAKE_PREFIX_PATH="/opt/ros/indigo" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/indigo/setup.sh" ]; then . "/opt/ros/indigo/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/indigo

%changelog
* Fri Feb 06 2015 Devon Ash <dash@clearpathrobotics.com> - 1.0.5-0
- Autogenerated by Bloom

