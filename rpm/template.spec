Name:           ros-indigo-pr2-gripper-sensor-controller
Version:        1.0.5
Release:        0%{?dist}
Summary:        ROS pr2_gripper_sensor_controller package

Group:          Development/Libraries
License:        BSD
URL:            http://ros.org/wiki/pr2_gripper_sensor_controller
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-indigo-actionlib-msgs
Requires:       ros-indigo-pluginlib
Requires:       ros-indigo-pr2-controller-interface
Requires:       ros-indigo-pr2-controller-manager
Requires:       ros-indigo-pr2-controllers-msgs
Requires:       ros-indigo-pr2-gripper-sensor-msgs
Requires:       ros-indigo-pr2-mechanism-model
Requires:       ros-indigo-realtime-tools
Requires:       ros-indigo-roscpp
Requires:       ros-indigo-roslib
Requires:       ros-indigo-rosrt
Requires:       ros-indigo-std-msgs
Requires:       ros-indigo-std-srvs
BuildRequires:  ros-indigo-actionlib-msgs
BuildRequires:  ros-indigo-catkin
BuildRequires:  ros-indigo-pluginlib
BuildRequires:  ros-indigo-pr2-controller-interface
BuildRequires:  ros-indigo-pr2-controller-manager
BuildRequires:  ros-indigo-pr2-controllers-msgs
BuildRequires:  ros-indigo-pr2-gripper-sensor-msgs
BuildRequires:  ros-indigo-pr2-mechanism-model
BuildRequires:  ros-indigo-realtime-tools
BuildRequires:  ros-indigo-roscpp
BuildRequires:  ros-indigo-roslib
BuildRequires:  ros-indigo-rosrt
BuildRequires:  ros-indigo-std-msgs
BuildRequires:  ros-indigo-std-srvs

%description
The pr2_gripper_sensor_controller package is a real-time controller that
integrates signals from the PR2 hand-mounted accelerometer and finger-mounted
pressure sensors with motor control of the gripper joint to do highly responsive
sensing and low-latency closed-loop control.

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/indigo/setup.sh" ]; then . "/opt/ros/indigo/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/indigo" \
        -DCMAKE_PREFIX_PATH="/opt/ros/indigo" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/indigo/setup.sh" ]; then . "/opt/ros/indigo/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/indigo

%changelog
* Fri Feb 06 2015 Devon Ash <dash@clearpathrobotics.com> - 1.0.5-0
- Autogenerated by Bloom

